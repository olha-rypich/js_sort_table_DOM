{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CC0BA,IAAM,EAAU,SAAS,aAAa,CAAC,SACjC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAa,EAAG,EAAM,IAAI,EAEhC,EAAQ,gBAAgB,CAAC,QAAS,SAAC,CAAnC,EAEE,IAAM,EAAY,AA9BpB,SAAmB,CAAK,CAAE,CAAC,EACzB,SAAS,EAAa,CAAG,EACvB,MAAO,CAAC,EAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GACvC,CAkBA,OAhBA,EAAM,IAAI,CAAC,SAAC,CAAA,CAAK,CAAjB,EACE,IAAM,EAAI,EAAI,KAAK,CAAC,EAAE,CAAC,SAAS,CAC1B,EAAI,EAAI,KAAK,CAAC,EAAE,CAAC,SAAS,CAEhC,OAAQ,CAAA,GACN,KAAK,CAAC,CAAC,EAAE,CAAC,WAAW,KAAO,CAAC,CAAC,EAAE,CAAC,WAAW,GAC1C,OAAO,EAAE,aAAa,CAAC,EAEzB,MAAK,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,KACnB,OAAO,EAAa,GAAK,EAAa,EAExC,SACE,MAAO,CAAC,EAAI,CAAC,CACjB,CACF,GAEO,CACT,EAQ8B,EADd,EAAE,MAAM,CAAC,SAAS,EAGhC,AAAA,EAAM,MAAM,CAAZ,KAAA,CAAA,EAAa,EAAG,GAClB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction sortItems(items, i) {\n    function convertToNum(str) {\n        return +str.slice(1).split(\",\").join(\"\");\n    }\n    items.sort(function(tr1, tr2) {\n        var a = tr1.cells[i].innerText;\n        var b = tr2.cells[i].innerText;\n        switch(true){\n            case a[0].toLowerCase() !== a[0].toUpperCase():\n                return a.localeCompare(b);\n            case a[0].startsWith(\"$\"):\n                return convertToNum(a) - convertToNum(b);\n            default:\n                return +a - +b;\n        }\n    });\n    return items;\n}\nvar headers = document.querySelector(\"thead\");\nvar tBody = document.querySelector(\"tbody\");\nvar tBodyRows = _to_consumable_array(tBody.rows);\nheaders.addEventListener(\"click\", function(e) {\n    var _tBody;\n    var index = e.target.cellIndex;\n    var sortElems = sortItems(tBodyRows, index);\n    (_tBody = tBody).append.apply(_tBody, _to_consumable_array(sortElems));\n});\n\n//# sourceMappingURL=index.23ffefc3.js.map\n","'use strict';\n\nfunction sortItems(items, i) {\n  function convertToNum(str) {\n    return +str.slice(1).split(',').join('');\n  }\n\n  items.sort((tr1, tr2) => {\n    const a = tr1.cells[i].innerText;\n    const b = tr2.cells[i].innerText;\n\n    switch (true) {\n      case a[0].toLowerCase() !== a[0].toUpperCase():\n        return a.localeCompare(b);\n\n      case a[0].startsWith('$'):\n        return convertToNum(a) - convertToNum(b);\n\n      default:\n        return +a - +b;\n    }\n  });\n\n  return items;\n}\n\nconst headers = document.querySelector('thead');\nconst tBody = document.querySelector('tbody');\nconst tBodyRows = [...tBody.rows];\n\nheaders.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n  const sortElems = sortItems(tBodyRows, index);\n\n  tBody.append(...sortElems);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","headers","document","querySelector","tBody","tBodyRows","rows","addEventListener","e","sortElems","sortItems","items","convertToNum","str","split","join","sort","tr1","tr2","a","cells","innerText","b","toLowerCase","toUpperCase","localeCompare","startsWith","target","cellIndex","append","apply"],"version":3,"file":"index.23ffefc3.js.map"}